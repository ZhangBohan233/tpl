//STACK SIZE
1024
//LITERAL LENGTH:
20
//GLOBAL MEMORY LENGTH:
0
//FUNCTIONS LENGTH:
1096
//MAIN TAKES ARG:
%0
//LITERALS:
3 0 0 0 0 0 0 0 16 4 0 0 0 0 0 0 37 100 10 0 
//FUNCTIONS COUNT:
9
//FUNCTION POINTERS:
1124 1132 1140 1148 1156 1164 1172 1415 1485 
//NATIVE FUNCTIONS COUNT:
6

//FUNCTIONS: 

//FUNCTION 6:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD_I          %2  8
#22 PUSH            %2
#24 LOAD_A          %2  $32
#34 LOAD_A          %3  $0
#44 LOAD_I          %4  8
#54 ASSIGN          %2  %3  %4
#58 LOAD_I          %2  8
#68 PUSH            %2
#70 LOAD_A          %2  $40
#80 LOAD_A          %3  $16
#90 LOAD_I          %4  8
#100 ASSIGN          %2  %3  %4
#104 LOAD_A          %0  $8
#114 LOAD_I          %1  16
#124 CALL            %0  %1
#127 LOAD_I          %0  8
#137 PUSH            %0
#139 LOAD            %0  $0
#149 LOAD            %1  $24
#159 MUL             %0  %1
#162 STORE           %2  %0  $32
#173 LOAD_I          %0  8
#183 PUSH            %0
#185 LOAD            %0  $32
#195 LOAD            %1  $16
#205 MUL             %0  %1
#208 STORE           %2  %0  $40
#219 LOAD_A          %0  $40
#229 LOAD_I          %1  8
#239 RETURN          %0  %1
#242 STOP

//FUNCTION 7:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD            %0  $0
#22 LOAD            %1  $8
#32 ADD             %0  %1
#35 STORE           %2  %0  $16
#46 LOAD_A          %0  $16
#56 LOAD_I          %1  8
#66 RETURN          %0  %1
#69 STOP

//FUNCTION 8:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD_A          %0  $0
#22 LOAD_A          %1  $1108
#32 LOAD_I          %2  8
#42 ASSIGN          %0  %1  %2
#46 LOAD_I          %0  8
#56 PUSH            %0
#58 LOAD_I          %0  8
#68 PUSH            %0
#70 LOAD_I          %0  8
#80 STORE           %1  %0  $16
#91 LOAD_I          %0  8
#101 PUSH            %0
#103 LOAD_I          %2  8
#113 PUSH            %2
#115 LOAD_A          %2  $32
#125 LOAD_A          %3  $16
#135 LOAD_I          %4  8
#145 ASSIGN          %2  %3  %4
#149 LOAD_I          %2  8
#159 PUSH            %2
#161 LOAD_A          %2  $40
#171 LOAD_A          %3  $0
#181 LOAD_I          %4  8
#191 ASSIGN          %2  %3  %4
#195 LOAD_I          %2  8
#205 PUSH            %2
#207 LOAD_A          %2  $48
#217 LOAD_A          %3  $1024
#227 LOAD_I          %4  8
#237 ASSIGN          %2  %3  %4
#241 LOAD_A          %0  $1100
#251 LOAD_I          %1  24
#261 CALL            %0  %1
#264 LOAD_A          %0  $8
#274 LOAD_A          %1  $24
#284 LOAD_I          %2  8
#294 ASSIGN          %0  %1  %2
#298 LOAD_I          %0  0
#308 PUSH            %0
#310 LOAD_I          %2  8
#320 PUSH            %2
#322 LOAD_A          %2  $32
#332 LOAD_A          %3  $1032
#342 LOAD_I          %4  8
#352 ASSIGN          %2  %3  %4
#356 LOAD_I          %2  8
#366 PUSH            %2
#368 LOAD_A          %2  $40
#378 LOAD_A          %3  $8
#388 LOAD_I          %4  8
#398 ASSIGN          %2  %3  %4
#402 LOAD_A          %0  $1068
#412 LOAD_I          %1  16
#422 CALL_NAT        %0  %1
#425 LOAD_I          %0  8
#435 PUSH            %0
#437 LOAD_I          %0  8
#447 PUSH            %0
#449 LOAD_I          %0  8
#459 STORE           %1  %0  $40
#470 LOAD_I          %0  8
#480 PUSH            %0
#482 LOAD_I          %2  8
#492 PUSH            %2
#494 LOAD_A          %2  $56
#504 LOAD_A          %3  $40
#514 LOAD_I          %4  8
#524 ASSIGN          %2  %3  %4
#528 LOAD_A          %0  $1060
#538 LOAD_I          %1  8
#548 CALL_NAT        %0  %1
#551 LOAD_A          %0  $32
#561 LOAD_A          %1  $48
#571 LOAD_I          %2  8
#581 ASSIGN          %0  %1  %2
#585 LOAD_I          %0  8
#595 PUSH            %0
#597 LOAD            %0  $8
#607 LOAD            %1  $32
#617 ADD             %0  %1
#620 STORE           %2  %0  $56
#631 LOAD_A          %0  $56
#641 LOAD_I          %1  8
#651 RETURN          %0  %1
#654 STOP


//MAIN:
LOAD_A          %0  $1116
LOAD_I          %1  0
CALL            %0  %1
