//STACK SIZE
1024
//LITERAL LENGTH:
16
//GLOBAL MEMORY LENGTH:
0
//FUNCTIONS LENGTH:
433
//MAIN TAKES ARG:
%0
//LITERALS:
1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 
//FUNCTIONS COUNT:
8
//FUNCTION POINTERS:
1112 1120 1128 1136 1144 1152 1160 1230 
//NATIVE FUNCTIONS COUNT:
6

//FUNCTIONS: 

//FUNCTION 6:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD            %0  $0
#22 LOAD            %1  $8
#32 ADD             %0  %1
#35 STORE           %2  %0  $16
#46 LOAD_A          %0  $16
#56 LOAD_I          %1  8
#66 RETURN          %0  %1
#69 STOP

//FUNCTION 7:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD_A          %0  $0
#22 LOAD_A          %1  $1096
#32 LOAD_I          %2  8
#42 ASSIGN          %0  %1  %2
#46 LOAD_I          %0  8
#56 PUSH            %0
#58 LOAD_I          %0  8
#68 PUSH            %0
#70 LOAD_I          %2  8
#80 PUSH            %2
#82 LOAD_A          %2  $24
#92 LOAD_A          %3  $1024
#102 LOAD_I          %4  8
#112 ASSIGN          %2  %3  %4
#116 LOAD_I          %2  8
#126 PUSH            %2
#128 LOAD_A          %2  $32
#138 LOAD_A          %3  $1032
#148 LOAD_I          %4  8
#158 ASSIGN          %2  %3  %4
#162 LOAD_A          %0  $0
#172 LOAD_I          %1  16
#182 CALL            %0  %1
#185 LOAD_A          %0  $8
#195 LOAD_A          %1  $16
#205 LOAD_I          %2  8
#215 ASSIGN          %0  %1  %2
#219 LOAD_A          %0  $8
#229 LOAD_I          %1  8
#239 RETURN          %0  %1
#242 STOP


//MAIN:
LOAD_A          %0  $1104
LOAD_I          %1  0
CALL            %0  %1
