//STACK SIZE
1024
//LITERAL LENGTH:
85
//GLOBAL MEMORY LENGTH:
24
//FUNCTIONS LENGTH:
1396
//MAIN TAKES ARG:
%0
//LITERALS:
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 40 4 0 0 0 0 0 0 102 105 98 32 116 105 109 101 58 32 37 100 10 0 64 66 15 0 0 0 0 0 70 4 0 0 0 0 0 0 108 111 111 112 32 116 105 109 101 58 32 37 100 10 0 
//FUNCTIONS COUNT:
8
//FUNCTION POINTERS:
1205
1213
1221
1229
1237
1245
1253
1681
//NATIVE FUNCTIONS COUNT:
6

//FUNCTIONS: 

//FUNCTION 6:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD            %0  $0
#22 LOAD            %1  $1040
#32 LT              %0  %1
#35 STORE           %2  %0  $8
#46 LOAD_I          %0  35
#56 LOAD            %1  $8
#66 IF_ZERO_GOTO    %0  %1
#69 LOAD_A          %0  $0
#79 LOAD_I          %1  8
#89 RETURN          %0  %1
#92 LOAD_I          %0  323
#102 GOTO            %0
#104 LOAD_I          %0  8
#114 PUSH            %0
#116 LOAD            %0  $0
#126 LOAD            %1  $1024
#136 SUB             %0  %1
#139 STORE           %2  %0  $16
#150 LOAD_I          %0  8
#160 PUSH            %0
#162 LOAD_I          %2  8
#172 PUSH            %2
#174 LOAD_A          %2  $32
#184 LOAD_A          %3  $16
#194 LOAD_I          %4  8
#204 ASSIGN          %2  %3  %4
#208 LOAD_I          %0  1189
#218 LOAD_I          %1  8
#228 CALL            %0  %1
#231 LOAD_I          %0  8
#241 PUSH            %0
#243 LOAD            %0  $0
#253 LOAD            %1  $1040
#263 SUB             %0  %1
#266 STORE           %2  %0  $32
#277 LOAD_I          %0  8
#287 PUSH            %0
#289 LOAD_I          %2  8
#299 PUSH            %2
#301 LOAD_A          %2  $48
#311 LOAD_A          %3  $32
#321 LOAD_I          %4  8
#331 ASSIGN          %2  %3  %4
#335 LOAD_I          %0  1189
#345 LOAD_I          %1  8
#355 CALL            %0  %1
#358 LOAD_I          %0  8
#368 PUSH            %0
#370 LOAD            %0  $24
#380 LOAD            %1  $40
#390 ADD             %0  %1
#393 STORE           %2  %0  $48
#404 LOAD_A          %0  $48
#414 LOAD_I          %1  8
#424 RETURN          %0  %1
#427 STOP

//FUNCTION 7:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD_I          %0  8
#22 PUSH            %0
#24 LOAD_I          %0  1141
#34 LOAD_I          %1  0
#44 CALL_NAT        %0  %1
#47 LOAD_A          %0  $0
#57 LOAD_A          %1  $8
#67 LOAD_I          %2  8
#77 ASSIGN          %0  %1  %2
#81 LOAD_I          %0  8
#91 PUSH            %0
#93 LOAD_I          %0  8
#103 PUSH            %0
#105 LOAD_I          %2  8
#115 PUSH            %2
#117 LOAD_A          %2  $32
#127 LOAD_A          %3  $1048
#137 LOAD_I          %4  8
#147 ASSIGN          %2  %3  %4
#151 LOAD_I          %0  1189
#161 LOAD_I          %1  8
#171 CALL            %0  %1
#174 LOAD_A          %0  $16
#184 LOAD_A          %1  $24
#194 LOAD_I          %2  8
#204 ASSIGN          %0  %1  %2
#208 LOAD_I          %0  8
#218 PUSH            %0
#220 LOAD_I          %0  8
#230 PUSH            %0
#232 LOAD_I          %0  1141
#242 LOAD_I          %1  0
#252 CALL_NAT        %0  %1
#255 LOAD_A          %0  $32
#265 LOAD_A          %1  $40
#275 LOAD_I          %2  8
#285 ASSIGN          %0  %1  %2
#289 LOAD_I          %0  8
#299 PUSH            %0
#301 LOAD            %0  $32
#311 LOAD            %1  $0
#321 SUB             %0  %1
#324 STORE           %2  %0  $48
#335 LOAD_I          %0  0
#345 PUSH            %0
#347 LOAD_I          %2  8
#357 PUSH            %2
#359 LOAD_A          %2  $56
#369 LOAD_A          %3  $1056
#379 LOAD_I          %4  8
#389 ASSIGN          %2  %3  %4
#393 LOAD_I          %2  8
#403 PUSH            %2
#405 LOAD_A          %2  $64
#415 LOAD_A          %3  $48
#425 LOAD_I          %4  8
#435 ASSIGN          %2  %3  %4
#439 LOAD_I          %0  1157
#449 LOAD_I          %1  16
#459 CALL_NAT        %0  %1
#462 STORE_SP
#463 LOAD            %0  $1032
#473 STORE_SP
#474 LOAD_I          %1  8
#484 PUSH            %1
#486 MOVE_REG        %1  %0
#489 LOAD            %2  $1078
#499 LT              %1  %2
#502 STORE           %3  %1  $56
#513 LOAD_I          %1  32
#523 LOAD            %2  $56
#533 IF_ZERO_GOTO    %1  %2
#536 LOAD_I          %1  1
#546 MOVE_REG        %2  %0
#549 ADD             %2  %1
#552 MOVE_REG        %0  %2
#555 RES_SP
#556 LOAD_I          %1  -95
#566 GOTO            %1
#568 RES_SP
#569 RES_SP
#570 LOAD_I          %1  8
#580 PUSH            %1
#582 LOAD_I          %1  8
#592 PUSH            %1
#594 LOAD_I          %1  1141
#604 LOAD_I          %2  0
#614 CALL_NAT        %1  %2
#617 LOAD_A          %1  $56
#627 LOAD_A          %2  $64
#637 LOAD_I          %3  8
#647 ASSIGN          %1  %2  %3
#651 LOAD_I          %1  8
#661 PUSH            %1
#663 LOAD            %1  $56
#673 LOAD            %2  $32
#683 SUB             %1  %2
#686 STORE           %3  %1  $72
#697 LOAD_I          %1  0
#707 PUSH            %1
#709 LOAD_I          %3  8
#719 PUSH            %3
#721 LOAD_A          %3  $80
#731 LOAD_A          %4  $1086
#741 LOAD_I          %5  8
#751 ASSIGN          %3  %4  %5
#755 LOAD_I          %3  8
#765 PUSH            %3
#767 LOAD_A          %3  $88
#777 LOAD_A          %4  $72
#787 LOAD_I          %5  8
#797 ASSIGN          %3  %4  %5
#801 LOAD_I          %1  1157
#811 LOAD_I          %2  16
#821 CALL_NAT        %1  %2
#824 LOAD_A          %1  $16
#834 LOAD_I          %2  8
#844 RETURN          %1  %2
#847 STOP


//MAIN:
LOAD_A          %0  $1109
LOAD_A          %1  $1024
LOAD_I          %2  8
ASSIGN          %0  %1  %2
LOAD_A          %0  $1117
LOAD_A          %1  $1032
LOAD_I          %2  8
ASSIGN          %0  %1  %2
LOAD_A          %0  $1125
LOAD_A          %1  $1032
LOAD_I          %2  8
ASSIGN          %0  %1  %2
LOAD_I          %0  1197
LOAD_I          %1  0
CALL            %0  %1
