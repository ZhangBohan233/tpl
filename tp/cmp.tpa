//STACK SIZE
1024
//LITERAL LENGTH:
36
//GLOBAL MEMORY LENGTH:
0
//FUNCTIONS LENGTH:
953
//MAIN TAKES ARG:
%0
//LITERALS:
8 4 0 0 0 0 0 0 37 100 32 0 2 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 
//FUNCTIONS COUNT:
8
//FUNCTION POINTERS:
1132
1140
1148
1156
1164
1172
1180
1862
//NATIVE FUNCTIONS COUNT:
6

//FUNCTIONS: 

//FUNCTION 6:
#0 LOAD_I          %0  0
#10 PUSH            %0
#12 LOAD_I          %2  8
#22 PUSH            %2
#24 LOAD_A          %2  $8
#34 LOAD_A          %3  $1024
#44 LOAD_I          %4  8
#54 ASSIGN          %2  %3  %4
#58 LOAD_I          %2  8
#68 PUSH            %2
#70 LOAD_A          %2  $16
#80 LOAD_A          %3  $0
#90 LOAD_I          %4  8
#100 ASSIGN          %2  %3  %4
#104 LOAD_I          %0  1084
#114 LOAD_I          %1  16
#124 CALL_NAT        %0  %1
#127 LOAD_I          %0  8
#137 PUSH            %0
#139 LOAD            %0  $0
#149 LOAD            %1  $1036
#159 LT              %0  %1
#162 STORE           %2  %0  $8
#173 LOAD_I          %0  35
#183 LOAD            %1  $8
#193 IF_ZERO_GOTO    %0  %1
#196 LOAD_A          %0  $0
#206 LOAD_I          %1  8
#216 RETURN          %0  %1
#219 LOAD_I          %0  450
#229 GOTO            %0
#231 LOAD_I          %0  8
#241 PUSH            %0
#243 LOAD            %0  $0
#253 LOAD            %1  $1044
#263 SUB             %0  %1
#266 STORE           %2  %0  $16
#277 LOAD_I          %0  8
#287 PUSH            %0
#289 LOAD_I          %2  8
#299 PUSH            %2
#301 LOAD_A          %2  $32
#311 LOAD_A          %3  $16
#321 LOAD_I          %4  8
#331 ASSIGN          %2  %3  %4
#335 LOAD_I          %0  1116
#345 LOAD_I          %1  8
#355 CALL            %0  %1
#358 LOAD_I          %0  8
#368 PUSH            %0
#370 LOAD            %0  $0
#380 LOAD            %1  $1036
#390 SUB             %0  %1
#393 STORE           %2  %0  $32
#404 LOAD_I          %0  8
#414 PUSH            %0
#416 LOAD_I          %2  8
#426 PUSH            %2
#428 LOAD_A          %2  $48
#438 LOAD_A          %3  $32
#448 LOAD_I          %4  8
#458 ASSIGN          %2  %3  %4
#462 LOAD_I          %0  1116
#472 LOAD_I          %1  8
#482 CALL            %0  %1
#485 LOAD_I          %0  8
#495 PUSH            %0
#497 LOAD            %0  $0
#507 LOAD            %1  $1036
#517 SUB             %0  %1
#520 STORE           %2  %0  $48
#531 LOAD_I          %0  8
#541 PUSH            %0
#543 LOAD_I          %2  8
#553 PUSH            %2
#555 LOAD_A          %2  $64
#565 LOAD_A          %3  $48
#575 LOAD_I          %4  8
#585 ASSIGN          %2  %3  %4
#589 LOAD_I          %0  1116
#599 LOAD_I          %1  8
#609 CALL            %0  %1
#612 LOAD_I          %0  8
#622 PUSH            %0
#624 LOAD            %0  $24
#634 LOAD            %1  $56
#644 ADD             %0  %1
#647 STORE           %2  %0  $64
#658 LOAD_A          %0  $64
#668 LOAD_I          %1  8
#678 RETURN          %0  %1
#681 STOP

//FUNCTION 7:
#0 LOAD_I          %0  8
#10 PUSH            %0
#12 LOAD_I          %0  8
#22 PUSH            %0
#24 LOAD_I          %2  8
#34 PUSH            %2
#36 LOAD_A          %2  $16
#46 LOAD_A          %3  $1052
#56 LOAD_I          %4  8
#66 ASSIGN          %2  %3  %4
#70 LOAD_I          %0  1116
#80 LOAD_I          %1  8
#90 CALL            %0  %1
#93 LOAD_A          %0  $0
#103 LOAD_A          %1  $8
#113 LOAD_I          %2  8
#123 ASSIGN          %0  %1  %2
#127 LOAD_A          %0  $0
#137 LOAD_I          %1  8
#147 RETURN          %0  %1
#150 STOP


//MAIN:
LOAD_I          %0  1124
LOAD_I          %1  0
CALL            %0  %1
